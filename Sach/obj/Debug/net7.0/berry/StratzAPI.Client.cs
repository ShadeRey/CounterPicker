// <auto-generated/>
#nullable enable

namespace Microsoft.Extensions.DependencyInjection
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public static partial class StratzAPIServiceCollectionExtensions
    {
        public static global::StrawberryShake.IClientBuilder<global::Sach.State.StratzAPIStoreAccessor> AddStratzAPI(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            var serviceCollection = new global::Microsoft.Extensions.DependencyInjection.ServiceCollection();
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp =>
            {
                ConfigureClient(sp, serviceCollection, strategy);
                return new ClientServiceProvider(global::Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(serviceCollection));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => new global::Sach.State.StratzAPIStoreAccessor());
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Sach.HeroStatisticsQuery>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Sach.StratzAPI>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Sach.IStratzAPI>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<ClientServiceProvider>(sp)));
            return new global::StrawberryShake.ClientBuilder<global::Sach.State.StratzAPIStoreAccessor>("StratzAPI", services, serviceCollection);
        }

        private static global::Microsoft.Extensions.DependencyInjection.IServiceCollection ConfigureClient(global::System.IServiceProvider parentServices, global::Microsoft.Extensions.DependencyInjection.ServiceCollection services, global::StrawberryShake.ExecutionStrategy strategy = global::StrawberryShake.ExecutionStrategy.NetworkOnly)
        {
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Transport.Http.IHttpConnection>(services, sp =>
            {
                var clientFactory = global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Net.Http.IHttpClientFactory>(parentServices);
                return new global::StrawberryShake.Transport.Http.HttpConnection(() => clientFactory.CreateClient("StratzAPI"));
            });
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.StringSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.BooleanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ShortSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IntSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.LongSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.FloatSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DecimalSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UrlSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.UUIDSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.IdSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateTimeSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.DateSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.ByteArraySerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.TimeSpanSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializer, global::StrawberryShake.Serialization.JsonSerializer>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.Serialization.ISerializerResolver>(services, sp => new global::StrawberryShake.Serialization.SerializerResolver(global::System.Linq.Enumerable.Concat(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(parentServices), global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::System.Collections.Generic.IEnumerable<global::StrawberryShake.Serialization.ISerializer>>(sp))));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory<global::Sach.IHeroStatisticsResult>, global::Sach.State.HeroStatisticsResultFactory>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultDataFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultDataFactory<global::Sach.IHeroStatisticsResult>>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationRequestFactory>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Sach.IHeroStatisticsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Sach.IHeroStatisticsResult>, global::Sach.State.HeroStatisticsBuilder>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IOperationExecutor<global::Sach.IHeroStatisticsResult>>(services, sp => new global::StrawberryShake.StorelessOperationExecutor<global::System.Text.Json.JsonDocument, global::Sach.IHeroStatisticsResult>(global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.Transport.Http.IHttpConnection>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IOperationResultBuilder<global::System.Text.Json.JsonDocument, global::Sach.IHeroStatisticsResult>>(sp), () => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::StrawberryShake.IResultPatcher<global::System.Text.Json.JsonDocument>>(sp)));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::StrawberryShake.IResultPatcher<global::System.Text.Json.JsonDocument>, global::StrawberryShake.Json.JsonResultPatcher>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Sach.HeroStatisticsQuery>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Sach.IHeroStatisticsQuery>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Sach.HeroStatisticsQuery>(sp));
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Sach.StratzAPI>(services);
            global::Microsoft.Extensions.DependencyInjection.ServiceCollectionServiceExtensions.AddSingleton<global::Sach.IStratzAPI>(services, sp => global::Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService<global::Sach.StratzAPI>(sp));
            return services;
        }

        private sealed class ClientServiceProvider : System.IServiceProvider, System.IDisposable
        {
            private readonly System.IServiceProvider _provider;
            public ClientServiceProvider(System.IServiceProvider provider)
            {
                _provider = provider;
            }

            public object? GetService(System.Type serviceType)
            {
                return _provider.GetService(serviceType);
            }

            public void Dispose()
            {
                if (_provider is System.IDisposable d)
                {
                    d.Dispose();
                }
            }
        }
    }
}

namespace Sach
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatisticsResult : global::System.IEquatable<HeroStatisticsResult>, IHeroStatisticsResult
    {
        public HeroStatisticsResult(global::Sach.IHeroStatistics_HeroStats? heroStats)
        {
            HeroStats = heroStats;
        }

        /// <summary>
        /// Queries used to gain insights into hero data and statistics.
        /// </summary>
        public global::Sach.IHeroStatistics_HeroStats? HeroStats { get; }

        public virtual global::System.Boolean Equals(HeroStatisticsResult? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((HeroStats is null && other.HeroStats is null) || HeroStats != null && HeroStats.Equals(other.HeroStats)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((HeroStatisticsResult)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (HeroStats != null)
                {
                    hash ^= 397 * HeroStats.GetHashCode();
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatistics_HeroStats_HeroStatsQuery : global::System.IEquatable<HeroStatistics_HeroStats_HeroStatsQuery>, IHeroStatistics_HeroStats_HeroStatsQuery
    {
        public HeroStatistics_HeroStats_HeroStatsQuery(global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup? heroVsHeroMatchup)
        {
            HeroVsHeroMatchup = heroVsHeroMatchup;
        }

        /// <summary>
        /// This is used on the Hero page to show the comparison of skill with the selected hero with other heroes.  It includes our Synergy and our Advantage formulas to ensure that a hero with a high win rate isn't simply just on the top of all the fields.
        /// </summary>
        public global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup? HeroVsHeroMatchup { get; }

        public virtual global::System.Boolean Equals(HeroStatistics_HeroStats_HeroStatsQuery? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (((HeroVsHeroMatchup is null && other.HeroVsHeroMatchup is null) || HeroVsHeroMatchup != null && HeroVsHeroMatchup.Equals(other.HeroVsHeroMatchup)));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((HeroStatistics_HeroStats_HeroStatsQuery)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (HeroVsHeroMatchup != null)
                {
                    hash ^= 397 * HeroVsHeroMatchup.GetHashCode();
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType : global::System.IEquatable<HeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType>, IHeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType
    {
        public HeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType(global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage?>? advantage)
        {
            Advantage = advantage;
        }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage?>? Advantage { get; }

        public virtual global::System.Boolean Equals(HeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Internal.ComparisonHelper.SequenceEqual(Advantage, other.Advantage));
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((HeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (Advantage != null)
                {
                    foreach (var Advantage_elm in Advantage)
                    {
                        if (Advantage_elm != null)
                        {
                            hash ^= 397 * Advantage_elm.GetHashCode();
                        }
                    }
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType : global::System.IEquatable<HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType>, IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType
    {
        public HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType(global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With?>? @with, global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs?>? vs)
        {
            With = @with;
            Vs = vs;
        }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With?>? With { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs?>? Vs { get; }

        public virtual global::System.Boolean Equals(HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::StrawberryShake.Internal.ComparisonHelper.SequenceEqual(With, other.With)) && global::StrawberryShake.Internal.ComparisonHelper.SequenceEqual(Vs, other.Vs);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (With != null)
                {
                    foreach (var With_elm in With)
                    {
                        if (With_elm != null)
                        {
                            hash ^= 397 * With_elm.GetHashCode();
                        }
                    }
                }

                if (Vs != null)
                {
                    foreach (var Vs_elm in Vs)
                    {
                        if (Vs_elm != null)
                        {
                            hash ^= 397 * Vs_elm.GetHashCode();
                        }
                    }
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType : global::System.IEquatable<HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType>, IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType
    {
        public HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType(global::System.Int16? heroId2, global::System.Decimal? winsAverage, global::System.Decimal? synergy)
        {
            HeroId2 = heroId2;
            WinsAverage = winsAverage;
            Synergy = synergy;
        }

        public global::System.Int16? HeroId2 { get; }

        public global::System.Decimal? WinsAverage { get; }

        public global::System.Decimal? Synergy { get; }

        public virtual global::System.Boolean Equals(HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::System.Object.Equals(HeroId2, other.HeroId2)) && global::System.Object.Equals(WinsAverage, other.WinsAverage) && global::System.Object.Equals(Synergy, other.Synergy);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (HeroId2 != null)
                {
                    hash ^= 397 * HeroId2.GetHashCode();
                }

                if (WinsAverage != null)
                {
                    hash ^= 397 * WinsAverage.GetHashCode();
                }

                if (Synergy != null)
                {
                    hash ^= 397 * Synergy.GetHashCode();
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType : global::System.IEquatable<HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType>, IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType
    {
        public HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType(global::System.Int16? heroId2, global::System.Decimal? winsAverage, global::System.Decimal? synergy)
        {
            HeroId2 = heroId2;
            WinsAverage = winsAverage;
            Synergy = synergy;
        }

        public global::System.Int16? HeroId2 { get; }

        public global::System.Decimal? WinsAverage { get; }

        public global::System.Decimal? Synergy { get; }

        public virtual global::System.Boolean Equals(HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType? other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            if (ReferenceEquals(this, other))
            {
                return true;
            }

            if (other.GetType() != GetType())
            {
                return false;
            }

            return (global::System.Object.Equals(HeroId2, other.HeroId2)) && global::System.Object.Equals(WinsAverage, other.WinsAverage) && global::System.Object.Equals(Synergy, other.Synergy);
        }

        public override global::System.Boolean Equals(global::System.Object? obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType)obj);
        }

        public override global::System.Int32 GetHashCode()
        {
            unchecked
            {
                int hash = 5;
                if (HeroId2 != null)
                {
                    hash ^= 397 * HeroId2.GetHashCode();
                }

                if (WinsAverage != null)
                {
                    hash ^= 397 * WinsAverage.GetHashCode();
                }

                if (Synergy != null)
                {
                    hash ^= 397 * Synergy.GetHashCode();
                }

                return hash;
            }
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatisticsResult
    {
        /// <summary>
        /// Queries used to gain insights into hero data and statistics.
        /// </summary>
        public global::Sach.IHeroStatistics_HeroStats? HeroStats { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats
    {
        /// <summary>
        /// This is used on the Hero page to show the comparison of skill with the selected hero with other heroes.  It includes our Synergy and our Advantage formulas to ensure that a hero with a high win rate isn't simply just on the top of all the fields.
        /// </summary>
        public global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup? HeroVsHeroMatchup { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroStatsQuery : IHeroStatistics_HeroStats
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup
    {
        public global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage?>? Advantage { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType : IHeroStatistics_HeroStats_HeroVsHeroMatchup
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage
    {
        public global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With?>? With { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs?>? Vs { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType : IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With
    {
        public global::System.Int16? HeroId2 { get; }

        public global::System.Decimal? WinsAverage { get; }

        public global::System.Decimal? Synergy { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType : IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With
    {
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs
    {
        public global::System.Int16? HeroId2 { get; }

        public global::System.Decimal? WinsAverage { get; }

        public global::System.Decimal? Synergy { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType : IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs
    {
    }

    /// <summary>
    /// Represents the operation service of the HeroStatistics GraphQL operation
    /// <code>
    /// query HeroStatistics($heroId: Short = 6) {
    ///   heroStats {
    ///     __typename
    ///     heroVsHeroMatchup(heroId: $heroId) {
    ///       __typename
    ///       advantage {
    ///         __typename
    ///         with {
    ///           __typename
    ///           heroId2
    ///           winsAverage
    ///           synergy
    ///         }
    ///         vs {
    ///           __typename
    ///           heroId2
    ///           winsAverage
    ///           synergy
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatisticsQueryDocument : global::StrawberryShake.IDocument
    {
        private HeroStatisticsQueryDocument()
        {
        }

        public static HeroStatisticsQueryDocument Instance { get; } = new HeroStatisticsQueryDocument();
        public global::StrawberryShake.OperationKind Kind => global::StrawberryShake.OperationKind.Query;
        public global::System.ReadOnlySpan<global::System.Byte> Body => new global::System.Byte[]{0x71, 0x75, 0x65, 0x72, 0x79, 0x20, 0x48, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x28, 0x24, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x3a, 0x20, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x20, 0x3d, 0x20, 0x36, 0x29, 0x20, 0x7b, 0x20, 0x68, 0x65, 0x72, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x72, 0x6f, 0x56, 0x73, 0x48, 0x65, 0x72, 0x6f, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x75, 0x70, 0x28, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x3a, 0x20, 0x24, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x29, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x32, 0x20, 0x77, 0x69, 0x6e, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x20, 0x73, 0x79, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x7d, 0x20, 0x76, 0x73, 0x20, 0x7b, 0x20, 0x5f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x32, 0x20, 0x77, 0x69, 0x6e, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x20, 0x73, 0x79, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d, 0x20, 0x7d};
        public global::StrawberryShake.DocumentHash Hash { get; } = new global::StrawberryShake.DocumentHash("md5Hash", "76235673ca089cd8ec9956e65c3e5c77");
        public override global::System.String ToString()
        {
#if NETCOREAPP3_1_OR_GREATER
        return global::System.Text.Encoding.UTF8.GetString(Body);
#else
            return global::System.Text.Encoding.UTF8.GetString(Body.ToArray());
#endif
        }
    }

    /// <summary>
    /// Represents the operation service of the HeroStatistics GraphQL operation
    /// <code>
    /// query HeroStatistics($heroId: Short = 6) {
    ///   heroStats {
    ///     __typename
    ///     heroVsHeroMatchup(heroId: $heroId) {
    ///       __typename
    ///       advantage {
    ///         __typename
    ///         with {
    ///           __typename
    ///           heroId2
    ///           winsAverage
    ///           synergy
    ///         }
    ///         vs {
    ///           __typename
    ///           heroId2
    ///           winsAverage
    ///           synergy
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatisticsQuery : global::Sach.IHeroStatisticsQuery
    {
        private readonly global::StrawberryShake.IOperationExecutor<IHeroStatisticsResult> _operationExecutor;
        private readonly global::StrawberryShake.Serialization.IInputValueFormatter _shortFormatter;
        public HeroStatisticsQuery(global::StrawberryShake.IOperationExecutor<IHeroStatisticsResult> operationExecutor, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            _operationExecutor = operationExecutor ?? throw new global::System.ArgumentNullException(nameof(operationExecutor));
            _shortFormatter = serializerResolver.GetInputValueFormatter("Short");
        }

        global::System.Type global::StrawberryShake.IOperationRequestFactory.ResultType => typeof(IHeroStatisticsResult);
        public async global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IHeroStatisticsResult>> ExecuteAsync(global::System.Int16? heroId, global::System.Threading.CancellationToken cancellationToken = default)
        {
            var request = CreateRequest(heroId);
            return await _operationExecutor.ExecuteAsync(request, cancellationToken).ConfigureAwait(false);
        }

        public global::System.IObservable<global::StrawberryShake.IOperationResult<IHeroStatisticsResult>> Watch(global::System.Int16? heroId, global::StrawberryShake.ExecutionStrategy? strategy = null)
        {
            var request = CreateRequest(heroId);
            return _operationExecutor.Watch(request, strategy);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Int16? heroId)
        {
            var variables = new global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object?>();
            variables.Add("heroId", FormatHeroId(heroId));
            return CreateRequest(variables);
        }

        private global::StrawberryShake.OperationRequest CreateRequest(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return new global::StrawberryShake.OperationRequest(id: HeroStatisticsQueryDocument.Instance.Hash.Value, name: "HeroStatistics", document: HeroStatisticsQueryDocument.Instance, strategy: global::StrawberryShake.RequestStrategy.Default, variables: variables);
        }

        private global::System.Object? FormatHeroId(global::System.Int16? value)
        {
            if (value is null)
            {
                return value;
            }
            else
            {
                return _shortFormatter.Format(value);
            }
        }

        global::StrawberryShake.OperationRequest global::StrawberryShake.IOperationRequestFactory.Create(global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object?>? variables)
        {
            return CreateRequest(variables!);
        }
    }

    /// <summary>
    /// Represents the operation service of the HeroStatistics GraphQL operation
    /// <code>
    /// query HeroStatistics($heroId: Short = 6) {
    ///   heroStats {
    ///     __typename
    ///     heroVsHeroMatchup(heroId: $heroId) {
    ///       __typename
    ///       advantage {
    ///         __typename
    ///         with {
    ///           __typename
    ///           heroId2
    ///           winsAverage
    ///           synergy
    ///         }
    ///         vs {
    ///           __typename
    ///           heroId2
    ///           winsAverage
    ///           synergy
    ///         }
    ///       }
    ///     }
    ///   }
    /// }
    /// </code>
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IHeroStatisticsQuery : global::StrawberryShake.IOperationRequestFactory
    {
        global::System.Threading.Tasks.Task<global::StrawberryShake.IOperationResult<IHeroStatisticsResult>> ExecuteAsync(global::System.Int16? heroId, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.IObservable<global::StrawberryShake.IOperationResult<IHeroStatisticsResult>> Watch(global::System.Int16? heroId, global::StrawberryShake.ExecutionStrategy? strategy = null);
    }

    /// <summary>
    /// Represents the StratzAPI GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class StratzAPI : global::Sach.IStratzAPI
    {
        private readonly global::Sach.IHeroStatisticsQuery _heroStatistics;
        public StratzAPI(global::Sach.IHeroStatisticsQuery heroStatistics)
        {
            _heroStatistics = heroStatistics ?? throw new global::System.ArgumentNullException(nameof(heroStatistics));
        }

        public static global::System.String ClientName => "StratzAPI";
        public global::Sach.IHeroStatisticsQuery HeroStatistics => _heroStatistics;
    }

    /// <summary>
    /// Represents the StratzAPI GraphQL client
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial interface IStratzAPI
    {
        global::Sach.IHeroStatisticsQuery HeroStatistics { get; }
    }
}

namespace Sach.State
{
    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatisticsResultFactory : global::StrawberryShake.IOperationResultDataFactory<global::Sach.HeroStatisticsResult>
    {
        public HeroStatisticsResultFactory()
        {
        }

        global::System.Type global::StrawberryShake.IOperationResultDataFactory.ResultType => typeof(global::Sach.IHeroStatisticsResult);
        public HeroStatisticsResult Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot = null)
        {
            if (dataInfo is HeroStatisticsResultInfo info)
            {
                return new HeroStatisticsResult(MapIHeroStatistics_HeroStats(info.HeroStats));
            }

            throw new global::System.ArgumentException("HeroStatisticsResultInfo expected.");
        }

        private global::Sach.IHeroStatistics_HeroStats? MapIHeroStatistics_HeroStats(global::Sach.State.HeroStatsQueryData? data)
        {
            if (data is null)
            {
                return null;
            }

            IHeroStatistics_HeroStats returnValue = default !;
            if (data?.__typename.Equals("HeroStatsQuery", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new HeroStatistics_HeroStats_HeroStatsQuery(MapIHeroStatistics_HeroStats_HeroVsHeroMatchup(data.HeroVsHeroMatchup));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup(global::Sach.State.HeroMatchupTypeData? data)
        {
            if (data is null)
            {
                return null;
            }

            IHeroStatistics_HeroStats_HeroVsHeroMatchup returnValue = default !;
            if (data?.__typename.Equals("HeroMatchupType", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new HeroStatistics_HeroStats_HeroVsHeroMatchup_HeroMatchupType(MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_AdvantageArray(data.Advantage));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage?>? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_AdvantageArray(global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroDryadTypeData?>? list)
        {
            if (list is null)
            {
                return null;
            }

            var heroDryadTypes = new global::System.Collections.Generic.List<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage?>();
            foreach (global::Sach.State.HeroDryadTypeData? child in list)
            {
                heroDryadTypes.Add(MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage(child));
            }

            return heroDryadTypes;
        }

        private global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage(global::Sach.State.HeroDryadTypeData? data)
        {
            if (data is null)
            {
                return null;
            }

            IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage returnValue = default !;
            if (data?.__typename.Equals("HeroDryadType", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_HeroDryadType(MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_WithArray(data.With), MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_VsArray(data.Vs));
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With?>? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_WithArray(global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? list)
        {
            if (list is null)
            {
                return null;
            }

            var heroStatsHeroDryadTypes = new global::System.Collections.Generic.List<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With?>();
            foreach (global::Sach.State.HeroStatsHeroDryadTypeData? child in list)
            {
                heroStatsHeroDryadTypes.Add(MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With(child));
            }

            return heroStatsHeroDryadTypes;
        }

        private global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With(global::Sach.State.HeroStatsHeroDryadTypeData? data)
        {
            if (data is null)
            {
                return null;
            }

            IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With returnValue = default !;
            if (data?.__typename.Equals("HeroStatsHeroDryadType", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With_HeroStatsHeroDryadType(data.HeroId2, data.WinsAverage, data.Synergy);
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs?>? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_VsArray(global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? list)
        {
            if (list is null)
            {
                return null;
            }

            var heroStatsHeroDryadTypes = new global::System.Collections.Generic.List<global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs?>();
            foreach (global::Sach.State.HeroStatsHeroDryadTypeData? child in list)
            {
                heroStatsHeroDryadTypes.Add(MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs(child));
            }

            return heroStatsHeroDryadTypes;
        }

        private global::Sach.IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs? MapIHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs(global::Sach.State.HeroStatsHeroDryadTypeData? data)
        {
            if (data is null)
            {
                return null;
            }

            IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs returnValue = default !;
            if (data?.__typename.Equals("HeroStatsHeroDryadType", global::System.StringComparison.Ordinal) ?? false)
            {
                returnValue = new HeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs_HeroStatsHeroDryadType(data.HeroId2, data.WinsAverage, data.Synergy);
            }
            else
            {
                throw new global::System.NotSupportedException();
            }

            return returnValue;
        }

        global::System.Object global::StrawberryShake.IOperationResultDataFactory.Create(global::StrawberryShake.IOperationResultDataInfo dataInfo, global::StrawberryShake.IEntityStoreSnapshot? snapshot)
        {
            return Create(dataInfo, snapshot);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatisticsResultInfo : global::StrawberryShake.IOperationResultDataInfo
    {
        public HeroStatisticsResultInfo(global::Sach.State.HeroStatsQueryData? heroStats)
        {
            HeroStats = heroStats;
        }

        /// <summary>
        /// Queries used to gain insights into hero data and statistics.
        /// </summary>
        public global::Sach.State.HeroStatsQueryData? HeroStats { get; }

        public global::System.Collections.Generic.IReadOnlyCollection<global::StrawberryShake.EntityId> EntityIds => global::System.Array.Empty<global::StrawberryShake.EntityId>();
        public global::System.UInt64 Version => 0;
        public global::StrawberryShake.IOperationResultDataInfo WithVersion(global::System.UInt64 version)
        {
            return new HeroStatisticsResultInfo(HeroStats);
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatisticsBuilder : global::StrawberryShake.OperationResultBuilder<global::Sach.IHeroStatisticsResult>
    {
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Int16, global::System.Int16> _shortParser;
        private readonly global::StrawberryShake.Serialization.ILeafValueParser<global::System.Decimal, global::System.Decimal> _decimalParser;
        public HeroStatisticsBuilder(global::StrawberryShake.IOperationResultDataFactory<global::Sach.IHeroStatisticsResult> resultDataFactory, global::StrawberryShake.Serialization.ISerializerResolver serializerResolver)
        {
            ResultDataFactory = resultDataFactory ?? throw new global::System.ArgumentNullException(nameof(resultDataFactory));
            _shortParser = serializerResolver.GetLeafValueParser<global::System.Int16, global::System.Int16>("Short") ?? throw new global::System.ArgumentException("No serializer for type `Short` found.");
            _decimalParser = serializerResolver.GetLeafValueParser<global::System.Decimal, global::System.Decimal>("Decimal") ?? throw new global::System.ArgumentException("No serializer for type `Decimal` found.");
        }

        protected override global::StrawberryShake.IOperationResultDataFactory<global::Sach.IHeroStatisticsResult> ResultDataFactory { get; }

        protected override global::StrawberryShake.IOperationResultDataInfo BuildData(global::System.Text.Json.JsonElement obj)
        {
            return new HeroStatisticsResultInfo(Deserialize_IHeroStatistics_HeroStats(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "heroStats")));
        }

        private global::Sach.State.HeroStatsQueryData? Deserialize_IHeroStatistics_HeroStats(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("HeroStatsQuery", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Sach.State.HeroStatsQueryData(typename, heroVsHeroMatchup: Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "heroVsHeroMatchup")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::Sach.State.HeroMatchupTypeData? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("HeroMatchupType", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Sach.State.HeroMatchupTypeData(typename, advantage: Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_AdvantageArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "advantage")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroDryadTypeData?>? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_AdvantageArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var heroDryadTypes = new global::System.Collections.Generic.List<global::Sach.State.HeroDryadTypeData?>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                heroDryadTypes.Add(Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage(child));
            }

            return heroDryadTypes;
        }

        private global::Sach.State.HeroDryadTypeData? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("HeroDryadType", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Sach.State.HeroDryadTypeData(typename, @with: Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_WithArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "with")), vs: Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_VsArray(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "vs")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_WithArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var heroStatsHeroDryadTypes = new global::System.Collections.Generic.List<global::Sach.State.HeroStatsHeroDryadTypeData?>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                heroStatsHeroDryadTypes.Add(Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With(child));
            }

            return heroStatsHeroDryadTypes;
        }

        private global::Sach.State.HeroStatsHeroDryadTypeData? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_With(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("HeroStatsHeroDryadType", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Sach.State.HeroStatsHeroDryadTypeData(typename, heroId2: Deserialize_Int16(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "heroId2")), winsAverage: Deserialize_Decimal(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "winsAverage")), synergy: Deserialize_Decimal(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "synergy")));
            }

            throw new global::System.NotSupportedException();
        }

        private global::System.Int16? Deserialize_Int16(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            return _shortParser.Parse(obj.Value.GetInt16()!);
        }

        private global::System.Decimal? Deserialize_Decimal(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            return _decimalParser.Parse(obj.Value.GetDecimal()!);
        }

        private global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_VsArray(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var heroStatsHeroDryadTypes = new global::System.Collections.Generic.List<global::Sach.State.HeroStatsHeroDryadTypeData?>();
            foreach (global::System.Text.Json.JsonElement child in obj.Value.EnumerateArray())
            {
                heroStatsHeroDryadTypes.Add(Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs(child));
            }

            return heroStatsHeroDryadTypes;
        }

        private global::Sach.State.HeroStatsHeroDryadTypeData? Deserialize_IHeroStatistics_HeroStats_HeroVsHeroMatchup_Advantage_Vs(global::System.Text.Json.JsonElement? obj)
        {
            if (!obj.HasValue)
            {
                return null;
            }

            if (obj.Value.ValueKind == System.Text.Json.JsonValueKind.Null)
            {
                return null;
            }

            var typename = obj.Value.GetProperty("__typename").GetString();
            if (typename?.Equals("HeroStatsHeroDryadType", global::System.StringComparison.Ordinal) ?? false)
            {
                return new global::Sach.State.HeroStatsHeroDryadTypeData(typename, heroId2: Deserialize_Int16(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "heroId2")), winsAverage: Deserialize_Decimal(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "winsAverage")), synergy: Deserialize_Decimal(global::StrawberryShake.Json.JsonElementExtensions.GetPropertyOrNull(obj, "synergy")));
            }

            throw new global::System.NotSupportedException();
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatsQueryData
    {
        public HeroStatsQueryData(global::System.String __typename, global::Sach.State.HeroMatchupTypeData? heroVsHeroMatchup = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            HeroVsHeroMatchup = heroVsHeroMatchup;
        }

        public global::System.String __typename { get; }

        ///<summary>This is used on the Hero page to show the comparison of skill with the selected hero with other heroes.  It includes our Synergy and our Advantage formulas to ensure that a hero with a high win rate isn't simply just on the top of all the fields.</summary>
        public global::Sach.State.HeroMatchupTypeData? HeroVsHeroMatchup { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroMatchupTypeData
    {
        public HeroMatchupTypeData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroDryadTypeData?>? advantage = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            Advantage = advantage;
        }

        public global::System.String __typename { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroDryadTypeData?>? Advantage { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroDryadTypeData
    {
        public HeroDryadTypeData(global::System.String __typename, global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? @with = default !, global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? vs = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            With = @with;
            Vs = vs;
        }

        public global::System.String __typename { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? With { get; }

        public global::System.Collections.Generic.IReadOnlyList<global::Sach.State.HeroStatsHeroDryadTypeData?>? Vs { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class HeroStatsHeroDryadTypeData
    {
        public HeroStatsHeroDryadTypeData(global::System.String __typename, global::System.Int16? heroId2 = default !, global::System.Decimal? winsAverage = default !, global::System.Decimal? synergy = default !)
        {
            this.__typename = __typename ?? throw new global::System.ArgumentNullException(nameof(__typename));
            HeroId2 = heroId2;
            WinsAverage = winsAverage;
            Synergy = synergy;
        }

        public global::System.String __typename { get; }

        public global::System.Int16? HeroId2 { get; }

        public global::System.Decimal? WinsAverage { get; }

        public global::System.Decimal? Synergy { get; }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("StrawberryShake", "14.0.0.0")]
    public partial class StratzAPIStoreAccessor : global::StrawberryShake.IStoreAccessor
    {
        public global::StrawberryShake.IOperationStore OperationStore => throw new global::System.NotSupportedException("OperationStore is not supported in store less mode");
        public global::StrawberryShake.IEntityStore EntityStore => throw new global::System.NotSupportedException("EntityStore is not supported in store less mode");
        public global::StrawberryShake.IEntityIdSerializer EntityIdSerializer => throw new global::System.NotSupportedException("EntityIdSerializer is not supported in store less mode");
        public global::StrawberryShake.IOperationRequestFactory GetOperationRequestFactory(global::System.Type resultType)
        {
            throw new global::System.NotSupportedException("GetOperationRequestFactory is not supported in store less mode");
        }

        public global::StrawberryShake.IOperationResultDataFactory GetOperationResultDataFactory(global::System.Type resultType)
        {
            throw new global::System.NotSupportedException("GetOperationResultDataFactory is not supported in store less mode");
        }
    }
}
